:root {
    /* Base everything off puzzle width */
    --puzzle-width: min(100%, 1089px);
    
    /* Grid dimensions */
    --grid-left-offset: calc(var(--puzzle-width) * 0.25); /* Distance from left edge to first column */
    --grid-width: calc(var(--puzzle-width) - var(--grid-left-offset)); /* Width from first column to right edge */
    --grid-height: calc(var(--puzzle-width) * 1.017); /* 1107.6/1089 = 1.017 */
    
    /* Cell dimensions */
    --cell-width: calc(var(--grid-width) / 10);  /* Grid is 10 cells wide */
    --cell-height: calc(var(--grid-height) / 12); /* Grid is 12 cells high */
    
    /* Colors */
    --primary-color: #000;
    --secondary-color: #228B22;
    --highlight-color: rgba(0, 123, 255, 0.4);
    --highlight-word-color: rgba(0, 123, 255, 0.1);
    --background-color: #f8f9fa;
}

body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 20px;
    background-color: var(--background-color);
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}

.invisible {
    visibility: hidden;
    height: 0;
    margin: 0;
    padding: 0;
}

h1 {
    color: var(--primary-color);
    text-align: center;
    margin-bottom: 30px;
}

.puzzle-container {
    position: relative;
    width: 100%;
    max-width: 1089px;
    margin: 0 auto;
}

.puzzle-wrapper {
    position: relative;
    width: 100%;
    aspect-ratio: 1089/1846;
}

.puzzle-image {
    width: 100%;
    height: auto;
    display: block;
}

.crossword-grid {
    position: absolute;
    bottom: 0;
    left: var(--grid-left-offset);
    width: var(--grid-width);
    height: var(--grid-height);
    pointer-events: none;
}

.cell {
    position: absolute;
    width: var(--cell-width);
    height: var(--cell-height);
    border: none;
    background: transparent;
    pointer-events: all;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    user-select: none;
    transition: background-color 0.3s, border-color 0.3s;
}

.cell input {
    width: 100%;
    height: 75%;
    border: none;
    text-align: center;
    font-size: calc(var(--cell-height) * 0.6);
    background: transparent;
    color: var(--primary-color);
    caret-color: var(--highlight-color);
    text-transform: uppercase;
    padding: 0;
    margin: 0;
    pointer-events: all;
}

.cell.selected {
    border: 2px solid var(--highlight-color);
    background: rgba(255, 255, 255, 0.2);
}

.cell.word-highlight {
    background-color: var(--highlight-word-color);
}

.cell.correct {
    color: var(--secondary-color);
}

.cell.incorrect {
    color: red;
}

.cell.blocked {
    pointer-events: none;
}

.cell.blocked.flash {
    animation: flash 0.5s ease-out;
}

@keyframes flash {
    0% { background-color: rgba(196, 30, 58, 0.1); }
    100% { background-color: rgba(128, 128, 128, 0.05); }
}

.controls {
    position: absolute;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    width: var(--grid-width);
    display: flex;
    justify-content: space-between;
    gap: 10px;
    background: rgba(255, 255, 255, 0.9);
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    z-index: 10;
    flex-wrap: wrap;
}

.controls button {
    flex: 1;
    min-width: 150px;
    padding: 12px 15px;
    font-size: 16px;
    white-space: nowrap;
    background-color: #c41e3a; /* Christmas red */
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.2s;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.controls button:hover {
    background-color: #a01830;
    transform: translateY(-1px);
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
}

#check-button, #check-solution-button {
    background-color: #146B3A;
}

#check-button:hover, #check-solution-button:hover {
    background-color: #0f5028;
}

#instructions-button {
    background-color: #165B33;
}

#instructions-button:hover {
    background-color: #114426;
}

.controls button:disabled {
    background-color: #d9d9d9;
    color: #999;
    cursor: not-allowed;
    box-shadow: none;
    transform: none;
}

.direction-toggle {
    position: absolute;
    top: 20px;
    right: 20px;
}

.clues-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin-top: 30px;
}

.clues-section {
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.clues-section h2 {
    color: var(--secondary-color);
    margin-bottom: 15px;
}

.clue-list {
    list-style-type: none;
    padding: 0;
}

.clue-item {
    margin-bottom: 10px;
    cursor: pointer;
    padding: 5px;
    border-radius: 4px;
}

.clue-item:hover {
    background-color: #f0f0f0;
}

.selected-clue {
    background-color: #e6ffe6;
}

.cell-number {
    position: absolute;
    top: 2px;
    left: 2px;
    font-size: 12px;
    color: #666;
}

.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.modal-content {
    background: white;
    padding: 20px;
    border-radius: 5px;
    max-width: 500px;
    width: 90%;
}

.modal-buttons {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 20px;
}

/* Responsive styles */
@media (max-width: 1200px) {
    .container {
        padding: 0 10px;
    }
    
    .controls {
        width: 90%;
        max-width: var(--grid-width);
    }
}

@media (max-width: 768px) {
    .controls {
        padding: 12px;
        gap: 8px;
    }

    .controls button {
        min-width: 120px;
        font-size: 14px;
        padding: 10px 12px;
    }
}

@media (max-width: 480px) {
    .controls {
        display: grid;
        grid-template-columns: 1fr 1fr;
        width: 80%;
        gap: 8px;
    }
    
    .controls button {
        min-width: unset;
        width: 100%;
        font-size: 13px;
        padding: 8px 10px;
    }
    
    /* Last button spans full width if odd number of buttons */
    .controls button:last-child:nth-child(odd) {
        grid-column: 1 / -1;
    }
}
